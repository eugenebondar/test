/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _slicedToArray = function () {function sliceIterator(arr, i) {var _arr = [];var _n = true;var _d = false;var _e = undefined;try {for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {_arr.push(_s.value);if (i && _arr.length === i) break;}} catch (err) {_d = true;_e = err;} finally {try {if (!_n && _i["return"]) _i["return"]();} finally {if (_d) throw _e;}}return _arr;}return function (arr, i) {if (Array.isArray(arr)) {return arr;} else if (Symbol.iterator in Object(arr)) {return sliceIterator(arr, i);} else {throw new TypeError("Invalid attempt to destructure non-iterable instance");}};}();var apiFilterNameByLocalName = {
    currentPage: 'page',
    sortOrder: 'sort_order',
    sortField: 'sort_field',
    itemsPerPage: 'per' };


/**
                            * it changes names of filters properties in following way:
                            *                      from: nice, human readable, came cased
                            *                      to : less nice, snake cased, api readable
                            *
                            * @param {{}.<String,*>} filters
                            */
function filtersToRequestParams(filters) {
    return Object.entries(filters).reduce(function (prev, /* istanbul ignore next */_ref) {/* istanbul ignore next */var _ref2 = _slicedToArray(_ref, 2),key = _ref2[0],value = _ref2[1];
        var requestFilterName = apiFilterNameByLocalName[key] || key;
        prev[requestFilterName] = value;
        return prev;
    }, {});
} /* istanbul ignore next */exports.default =

filtersToRequestParams;