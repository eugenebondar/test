/* istanbul ignore next */'use strict';




jest.mock('uuid', function () /* istanbul ignore next */{return {
        v4: function /* istanbul ignore next */v4() {
            return 'some-uid';
        } };});var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);var /* istanbul ignore next */_enzyme = require('enzyme');var /* istanbul ignore next */_enzymeToJson = require('enzyme-to-json');var /* istanbul ignore next */_CodeSnippetsSection = require('./CodeSnippetsSection'); /* istanbul ignore next */var _CodeSnippetsSection2 = _interopRequireDefault(_CodeSnippetsSection);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}


describe('CodeSnippetSection', function () {
    describe('with required set of props', function () {
        var component = /* istanbul ignore next */void 0,errorConsole = /* istanbul ignore next */void 0;

        beforeAll(function () {
            errorConsole = spyOn(console, 'error');
        });

        beforeEach(function () {
            component = /* istanbul ignore next */(0, _enzyme.mount)( /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_CodeSnippetsSection2.default, /* istanbul ignore next */{ snippets: codeSnippets }));
        });

        it('matches snapshot', function () {
            expect( /* istanbul ignore next */(0, _enzymeToJson.mountToJson)(component)).toMatchSnapshot();
        });

        it('prints no errors from propTypes validation', function () {
            expect(errorConsole).not.toHaveBeenCalled();
        });
    });
});

var codeSnippets = [
{
    file_name: '/NVG589-OSS-1.1/uClibc/libc/misc/wordexp/wordexp.c',
    lines_of_code: [
    {
        number: '891',
        code: '      if ((buflen = read(fildes[0], buffer, bufsize)) &lt; 1) {' },

    {
        number: '895',
        code: '      if ((buflen = read(fildes[0], buffer, bufsize)) &lt; 1) {' },

    {
        number: '896',
        code: '      if ((buflen = read(fildes[0], buffer, bufsize)) &lt; 1) {' }] },



{
    file_name: '/NVG589-OSS-1.1/uClibc/libc/misc/wordexp/asdaads.c',
    lines_of_code: [
    {
        number: '891',
        code: '      if ((buflen = read(fildes[0], buffer, bufsize)) &lt; 1) {' },

    {
        number: '895',
        code: '      if ((buflen = read(fildes[0], buffer, bufsize)) &lt; 1) {' },

    {
        number: '896',
        code: '      if ((buflen = read(fildes[0], buffer, bufsize)) &lt; 1) {' }] }];