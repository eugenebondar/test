/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });exports.defaultFields = undefined;var _extends = Object.assign || function (target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i];for (var key in source) {if (Object.prototype.hasOwnProperty.call(source, key)) {target[key] = source[key];}}}return target;};var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);
var /* istanbul ignore next */_enzyme = require('enzyme');
var /* istanbul ignore next */_enzymeToJson = require('enzyme-to-json');
var /* istanbul ignore next */_CategoryDialog = require('./CategoryDialog'); /* istanbul ignore next */var _CategoryDialog2 = _interopRequireDefault(_CategoryDialog);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

var defaultFields = /* istanbul ignore next */exports.defaultFields = {
    isError: false,
    isLoading: false,
    isSaving: false,
    fields: {
        created_at: '',
        finding_classifications_count: 0,
        findings_count: 0,
        id: '',
        title: '',
        updated_at: '' },

    validation: {},
    onClose: function /* istanbul ignore next */onClose() /* istanbul ignore next */{return null;},
    onSubmit: function /* istanbul ignore next */onSubmit() /* istanbul ignore next */{return null;} };


describe('CategoryDialog', function () {
    describe('in NEW mode', function () {
        var component = /* istanbul ignore next */void 0,errorConsole = /* istanbul ignore next */void 0;

        beforeAll(function () {
            errorConsole = spyOn(console, 'error');
        });

        beforeEach(function () {
            component = /* istanbul ignore next */(0, _enzyme.mount)( /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_CategoryDialog2.default, defaultFields));
        });

        it('matches snapshot', function () {
            expect( /* istanbul ignore next */(0, _enzymeToJson.mountToJson)(component)).toMatchSnapshot();
        });

        it('prints no errors from propTypes validation', function () {
            expect(errorConsole).not.toHaveBeenCalled();
        });
    });

    describe(' in EDIT mode', function () {
        var component = /* istanbul ignore next */void 0,errorConsole = /* istanbul ignore next */void 0;

        beforeAll(function () {
            errorConsole = spyOn(console, 'error');
        });

        beforeEach(function () {
            component = /* istanbul ignore next */(0, _enzyme.mount)(
            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_CategoryDialog2.default, /* istanbul ignore next */_extends({}, defaultFields, {
                fields: { title: 'New Category' } })));

        });

        it('matches snapshot', function () {
            expect( /* istanbul ignore next */(0, _enzymeToJson.mountToJson)(component)).toMatchSnapshot();
        });

        it('prints no errors from propTypes validation', function () {
            expect(errorConsole).not.toHaveBeenCalled();
        });
    });
});