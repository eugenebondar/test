/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);
var /* istanbul ignore next */_counterpart = require('counterpart'); /* istanbul ignore next */var _counterpart2 = _interopRequireDefault(_counterpart);
var /* istanbul ignore next */_apocReact = require('apoc-react');

var /* istanbul ignore next */_Actions = require('../../../../Actions');

var /* istanbul ignore next */_Select = require('../../../../Shared/Elements/Select/'); /* istanbul ignore next */var _Select2 = _interopRequireDefault(_Select);
var /* istanbul ignore next */_ImportNessus = require('./ImportNessus'); /* istanbul ignore next */var _ImportNessus2 = _interopRequireDefault(_ImportNessus);
var /* istanbul ignore next */_ImportHailstorm = require('./ImportHailstorm'); /* istanbul ignore next */var _ImportHailstorm2 = _interopRequireDefault(_ImportHailstorm);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call && (typeof call === "object" || typeof call === "function") ? call : self;}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;}var

ImportFindingDialog = function (_React$Component) {_inherits(ImportFindingDialog, _React$Component);
    function /* istanbul ignore next */ImportFindingDialog(props) {/* istanbul ignore next */_classCallCheck(this, ImportFindingDialog);var _this = _possibleConstructorReturn(this, (ImportFindingDialog.__proto__ || Object.getPrototypeOf(ImportFindingDialog)).call(this,
        props));
        var sourceList = /* istanbul ignore next */_this.props.getSources();
        var findingsSource = sourceList.length ? sourceList[0].name : '';
        /* istanbul ignore next */_this.state = {
            importBtn: false,
            isDisabled: true,
            sourceList: sourceList,
            source: findingsSource,
            formValue: null };

        /* istanbul ignore next */_this.updateSource = /* istanbul ignore next */_this.updateSource.bind( /* istanbul ignore next */_this);
        /* istanbul ignore next */_this.updateValue = /* istanbul ignore next */_this.updateValue.bind( /* istanbul ignore next */_this);
        /* istanbul ignore next */_this.updateStatus = /* istanbul ignore next */_this.updateStatus.bind( /* istanbul ignore next */_this);
        /* istanbul ignore next */_this.processImport = /* istanbul ignore next */_this.processImport.bind( /* istanbul ignore next */_this);
        /* istanbul ignore next */_this.getValidation = /* istanbul ignore next */_this.getValidation.bind( /* istanbul ignore next */_this);
        /* istanbul ignore next */_this.closeDialog = /* istanbul ignore next */_this.closeDialog.bind( /* istanbul ignore next */_this); /* istanbul ignore next */return _this;
    }_createClass(ImportFindingDialog, [{ key: 'render', value: function render()

        {
            var selectSourceOptions = this.state.sourceList.map(function (item) {
                return {
                    value: item.name,
                    name: item.name };

            });
            var selectSource = this.state.source.length ?
            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_Select2.default, /* istanbul ignore next */{ id: 'source', updateValue: this.updateSource, options: selectSourceOptions,
                value: this.state.source }) :
            null;
            var importForm = this.state.source === 'Nessus' ?
            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_ImportNessus2.default, /* istanbul ignore next */{ updateStatus: this.updateStatus, updateValue: this.updateValue,
                runId: this.props.currentRun.id }) :

            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_ImportHailstorm2.default, /* istanbul ignore next */{ updateStatus: this.updateStatus, updateValue: this.updateValue,
                runId: this.props.currentRun.id }); /* istanbul ignore next */var _state =

            this.state,isDisabled = _state.isDisabled,importBtn = _state.importBtn;
            var _dialogFooter =
            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'modal-btn-wrap' },
                /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'button', /* istanbul ignore next */{ className: 'cancel-btn sc-btn', onClick: this.closeDialog },
                    /* istanbul ignore next */(0, _counterpart2.default)('general.cancel')),

                /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'button', /* istanbul ignore next */{ className: 'sc-btn sc-btn-primary', disabled: !importBtn || isDisabled,
                        onClick: this.processImport },
                    /* istanbul ignore next */(0, _counterpart2.default)('general.import')));



            return (
                /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_apocReact.ModalDialog, /* istanbul ignore next */{
                        isOpen: true,
                        header: /* istanbul ignore next */(0, _counterpart2.default)('testDetails.importFindingsPopUp.title'),
                        footer: _dialogFooter,
                        onOutsideModalClick: this.closeDialog },

                    /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */null,
                        this.getValidation(),
                        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'h3', /* istanbul ignore next */null, /* istanbul ignore next */(0, _counterpart2.default)('testDetails.importFindingsPopUp.importTo')),
                        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'form__field' },
                            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'label', /* istanbul ignore next */null, /* istanbul ignore next */(0, _counterpart2.default)('testDetails.importFindingsPopUp.customer')),
                            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'form__input' },
                                /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'span', /* istanbul ignore next */null, this.props.testDetails.customer_name))),


                        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'form__field' },
                            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'label', /* istanbul ignore next */null, /* istanbul ignore next */(0, _counterpart2.default)('testDetails.importFindingsPopUp.test')),
                            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'form__input' },
                                /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'span', /* istanbul ignore next */null, this.props.testDetails.name))),


                        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'form__field' },
                            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'label', /* istanbul ignore next */null, /* istanbul ignore next */(0, _counterpart2.default)('testDetails.importFindingsPopUp.testRun')),
                            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'form__input' },
                                /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'span', /* istanbul ignore next */null, this.props.currentRun.id_alias)))),



                    /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */null,
                        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'h3', /* istanbul ignore next */null, /* istanbul ignore next */(0, _counterpart2.default)('testDetails.importFindingsPopUp.importFrom')),
                        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'form__field' },
                            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'label', /* istanbul ignore next */null, /* istanbul ignore next */(0, _counterpart2.default)('testDetails.importFindingsPopUp.source')),
                            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'form__input' },
                                selectSource)),


                        importForm)));



        } }, { key: 'closeDialog', value: function closeDialog()

        {/* istanbul ignore next */var _props =
            this.props,close = _props.close,name = _props.name;
            close(name);
        } }, { key: 'updateSource', value: function updateSource(

        id, value) {
            this.setState({
                source: value,
                isDisabled: false });

        } }, { key: 'updateStatus', value: function updateStatus(

        value) {
            this.setState({ importBtn: value });
        } }, { key: 'updateValue', value: function updateValue(

        value) {
            this.setState({
                formValue: value,
                isDisabled: false });

        } }, { key: 'getValidation', value: function getValidation()

        {/* istanbul ignore next */var
            validation = this.props.validation;
            return validation ?
            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'validation__error-message sc-error' },
                validation.map(function (validationMesssage, i) {
                    return (/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ key: i }, validationMesssage));
                })) :

            null;
        } }, { key: 'processImport', value: function processImport()

        {/* istanbul ignore next */var _state2 =
            this.state,formValue = _state2.formValue,importBtn = _state2.importBtn,source = _state2.source;
            if (importBtn && formValue) {
                if (source === 'Nessus') {
                    /* istanbul ignore next */_Actions.TestDetailsActions.importNessus(formValue);
                } else {
                    /* istanbul ignore next */_Actions.TestDetailsActions.importFindings(formValue);
                }
            }
        } }]);return ImportFindingDialog;}( /* istanbul ignore next */_react2.default.Component); /* istanbul ignore next */exports.default = ImportFindingDialog;


ImportFindingDialog.propTypes = {
    validation: /* istanbul ignore next */_react2.default.PropTypes.arrayOf( /* istanbul ignore next */_react2.default.PropTypes.string),
    runId: /* istanbul ignore next */_react2.default.PropTypes.string,
    name: /* istanbul ignore next */_react2.default.PropTypes.string,
    testDetails: /* istanbul ignore next */_react2.default.PropTypes.object,
    currentRun: /* istanbul ignore next */_react2.default.PropTypes.object,
    close: /* istanbul ignore next */_react2.default.PropTypes.func,
    importTrigger: /* istanbul ignore next */_react2.default.PropTypes.func,
    getSources: /* istanbul ignore next */_react2.default.PropTypes.func };