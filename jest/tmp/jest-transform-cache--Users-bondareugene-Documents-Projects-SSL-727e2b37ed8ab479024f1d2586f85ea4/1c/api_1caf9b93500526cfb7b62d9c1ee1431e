/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });var /* istanbul ignore next */_Api = require('../../Utils/Api'); /* istanbul ignore next */var _Api2 = _interopRequireDefault(_Api);
var /* istanbul ignore next */_Model = require('../Model'); /* istanbul ignore next */var _Model2 = _interopRequireDefault(_Model);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

var ServiceAPI = /* istanbul ignore next */_Model2.default.New();

ServiceAPI.fetchCustomers = function (filter) {
    return (/* istanbul ignore next */_Api2.default.getFull('/api/service/organizations.json', filter));
};

ServiceAPI.fetchCustomer = function (id) {
    return (/* istanbul ignore next */_Api2.default.get('/api/service/organizations/' + id));
};

ServiceAPI.addCustomer = function (data) {
    return (/* istanbul ignore next */_Api2.default.post('/api/service/organizations', data));
};

ServiceAPI.editCustomer = function (data, id) {
    return (/* istanbul ignore next */_Api2.default.put('/api/service/organizations/' + id + '.json', data));
};

ServiceAPI.deleteCustomer = function (id) {
    return (/* istanbul ignore next */_Api2.default.delete('/api/service/organizations/' + id + '.json', id));
};

ServiceAPI.suspendCustomer = function (id, data) {
    return (/* istanbul ignore next */_Api2.default.put('/api/service/organizations/' + id + '.json', data));
};

ServiceAPI.editBranding = function (id, data) {
    return (/* istanbul ignore next */_Api2.default.put('/api/service/organizations/' + id + '.json', data));
};

ServiceAPI.editBrandingFile = function (id, data) {
    return (/* istanbul ignore next */_Api2.default.updateForm('/api/service/organizations/' + id + '.json', data));
};

ServiceAPI.getTestAssigneeList = function () {
    return (/* istanbul ignore next */_Api2.default.get('/api/service/users/service.json'));
};

ServiceAPI.addNewTest = function (test) {
    return (/* istanbul ignore next */_Api2.default.post('/api/service/tests.json', test));
};

ServiceAPI.editTest = function (test, id) {
    return (/* istanbul ignore next */_Api2.default.put('/api/service/tests/' + id, test));
};

ServiceAPI.fetchTest = function (id) {
    return (/* istanbul ignore next */_Api2.default.get('/api/service/tests/' + id));
};

ServiceAPI.deleteTest = function (id) {
    return (/* istanbul ignore next */_Api2.default.delete('/api/service/tests/' + id));
};

ServiceAPI.addTestSettings = function (id, isService, data, isClaim) {
    return (/* istanbul ignore next */_Api2.default.post('/api/' + (isService ? 'service/' : '') + 'tests/' + id + '/configure' + (isClaim ? '_and_claim' : '') + '.json', data));
}; /* istanbul ignore next */exports.default =

ServiceAPI;