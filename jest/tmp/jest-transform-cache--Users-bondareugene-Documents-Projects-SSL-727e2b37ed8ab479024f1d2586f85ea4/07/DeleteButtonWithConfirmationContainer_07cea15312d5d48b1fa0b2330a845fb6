/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _extends = Object.assign || function (target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i];for (var key in source) {if (Object.prototype.hasOwnProperty.call(source, key)) {target[key] = source[key];}}}return target;};var _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();var _get = function get(object, property, receiver) {if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {var parent = Object.getPrototypeOf(object);if (parent === null) {return undefined;} else {return get(parent, property, receiver);}} else if ("value" in desc) {return desc.value;} else {var getter = desc.get;if (getter === undefined) {return undefined;}return getter.call(receiver);}};var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);
var /* istanbul ignore next */_reflux = require('reflux'); /* istanbul ignore next */var _reflux2 = _interopRequireDefault(_reflux);

var /* istanbul ignore next */_DeleteButtonWithConfirmationStore = require('./DeleteButtonWithConfirmationStore'); /* istanbul ignore next */var _DeleteButtonWithConfirmationStore2 = _interopRequireDefault(_DeleteButtonWithConfirmationStore);
var /* istanbul ignore next */_DeleteButtonWithConfirmationActions = require('./DeleteButtonWithConfirmationActions'); /* istanbul ignore next */var _DeleteButtonWithConfirmationActions2 = _interopRequireDefault(_DeleteButtonWithConfirmationActions);

var /* istanbul ignore next */_DeleteButtonWithConfirmation = require('./DeleteButtonWithConfirmation'); /* istanbul ignore next */var _DeleteButtonWithConfirmation2 = _interopRequireDefault(_DeleteButtonWithConfirmation);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call && (typeof call === "object" || typeof call === "function") ? call : self;}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;}var

FindingDialogContainer = function (_Reflux$Component) {_inherits(FindingDialogContainer, _Reflux$Component);
    function /* istanbul ignore next */FindingDialogContainer(props) {/* istanbul ignore next */_classCallCheck(this, FindingDialogContainer);var _this = _possibleConstructorReturn(this, (FindingDialogContainer.__proto__ || Object.getPrototypeOf(FindingDialogContainer)).call(this,
        props));
        /* istanbul ignore next */_this.state = /* istanbul ignore next */_DeleteButtonWithConfirmationStore.defaultState;
        /* istanbul ignore next */_this.store = /* istanbul ignore next */_DeleteButtonWithConfirmationStore2.default; /* istanbul ignore next */return _this;
    }_createClass(FindingDialogContainer, [{ key: 'componentWillUnmount', value: function componentWillUnmount()

        {
            /* istanbul ignore next */_get(FindingDialogContainer.prototype.__proto__ || Object.getPrototypeOf(FindingDialogContainer.prototype), 'componentWillUnmount', this).call(this);
            /* istanbul ignore next */_DeleteButtonWithConfirmationActions2.default.destroy();
        } }, { key: 'render', value: function render()

        {
            return (
                /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_DeleteButtonWithConfirmation2.default, /* istanbul ignore next */_extends({},
                this.props,
                this.state, {
                    onConfirmDeleting: /* istanbul ignore next */_DeleteButtonWithConfirmationActions2.default.confirmDeleting })));


        } }]);return FindingDialogContainer;}( /* istanbul ignore next */_reflux2.default.Component); /* istanbul ignore next */exports.default = FindingDialogContainer;


FindingDialogContainer.propTypes = {
    onDeleteFinding: /* istanbul ignore next */_react2.default.PropTypes.func.isRequired };