/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();








var /* istanbul ignore next */_react = require('react');
var /* istanbul ignore next */_ListenerMethods = require('reflux-core/lib/ListenerMethods'); /* istanbul ignore next */var _ListenerMethods2 = _interopRequireDefault(_ListenerMethods);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call && (typeof call === "object" || typeof call === "function") ? call : self;}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;} /**
hared.
module Shared/BaseComponent
version 1.0.0

author Yevhen Bondar
copyright (c) 2016 SoftServe.

ase component which all stateful components should extend.
rovides `listenTo` method for listening to Reflux listenables, replacing
`Reflux.listenTo` mixin factory with same signature
link https://github.com/reflux/refluxjs#using-refluxlistento
example
```
class ExampleComponent extends BaseComponent {
constructor(props) {
super(props);
this.listenTo(Store, this._handleStoreChange);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   *     }
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   * ```
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   */var BaseComponent = function (_Component) {_inherits(BaseComponent, _Component);function /* istanbul ignore next */BaseComponent(props) {/* istanbul ignore next */_classCallCheck(this, BaseComponent);var _this = _possibleConstructorReturn(this, (BaseComponent.__proto__ || Object.getPrototypeOf(BaseComponent)).call(this, props)); /* istanbul ignore next */_this._isMounted = false;
        /* istanbul ignore next */_this._methodsAreBound = false;
        /* istanbul ignore next */_this._listenStack = []; /* istanbul ignore next */return _this;
    }_createClass(BaseComponent, [{ key: 'componentDidMount', value: function componentDidMount()

        {/* istanbul ignore next */var _this2 = this;
            this._isMounted = true;

            if (!this._listenStack.length) {
                return;
            }

            this._bindMethods();

            this._listenStack.forEach(function ( /* istanbul ignore next */_ref) {/* istanbul ignore next */var method = _ref.method,args = _ref.args;
                /* istanbul ignore next */_this2[method].apply( /* istanbul ignore next */_this2, args);
            });
        } }, { key: 'componentWillUnmount', value: function componentWillUnmount()

        {
            this._isMounted = false;

            if (this._methodsAreBound) {
                this.stopListeningToAll();
            }
        }

        /**
           * Listen to a Reflux listenable
           * @param {Function|object} listenable An Action or Store that should be listened to.
           * @param {Function|string} callback The callback to register as event handler
           * @param {Function|string} defaultCallback The callback to register as default handler
           */ }, { key: 'listenTo', value: function listenTo()
        {/* istanbul ignore next */for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {args[_key] = arguments[_key];}
            if (!this._isMounted) {
                this._listenStack.push({
                    method: '_listenTo',
                    args: args });


                return;
            }

            this._bindMethods();
            this._listenTo.apply(this, args);
        }

        /**
           * Listen to many Reflux listenables
           * @param {object} listenables An object of listenables
           */ }, { key: 'listenToMany', value: function listenToMany(
        listenables) {
            if (!this._isMounted) {
                this._listenStack.push({
                    method: '_listenToMany',
                    args: [listenables] });

            }

            this._bindMethods();
            this._listenToMany(listenables);
        } }, { key: '_bindMethods', value: function _bindMethods()

        {
            if (this._methodsAreBound) {
                return;
            }

            var methodName = /* istanbul ignore next */void 0;
            for (var key in /* istanbul ignore next */_ListenerMethods2.default) {
                // We have overriden `listenTo` and `listenToMany` above, so make special cases here
                methodName = key === 'listenTo' || key === 'listenToMany' ? /* istanbul ignore next */'_' + key : key;

                if (this[methodName] !== /* istanbul ignore next */_ListenerMethods2.default[key]) {
                    if (this[methodName]) {
                        throw new Error( /* istanbul ignore next */'Can\'t have other property ' + methodName + ' when extending BaseComponent!');
                    }
                    this[methodName] = /* istanbul ignore next */_ListenerMethods2.default[key];
                }
            }

            this._methodsAreBound = true;
        } }]);return BaseComponent;}(_react.Component); /* istanbul ignore next */exports.default =


BaseComponent;