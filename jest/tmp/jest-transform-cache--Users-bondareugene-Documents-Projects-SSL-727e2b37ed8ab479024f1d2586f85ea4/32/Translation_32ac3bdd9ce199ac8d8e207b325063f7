/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _extends = Object.assign || function (target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i];for (var key in source) {if (Object.prototype.hasOwnProperty.call(source, key)) {target[key] = source[key];}}}return target;};exports.default =



Translation;var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);var /* istanbul ignore next */_commonProps = require('./commonProps'); /* istanbul ignore next */var _commonProps2 = _interopRequireDefault(_commonProps);var /* istanbul ignore next */_counterpart = require('counterpart'); /* istanbul ignore next */var _counterpart2 = _interopRequireDefault(_counterpart);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function Translation( /* istanbul ignore next */_ref) {/* istanbul ignore next */var value = _ref.value,counterPartOptions = _ref.counterPartOptions,useOriginalTextAsFallback = _ref.useOriginalTextAsFallback;
    return (
        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'span', /* istanbul ignore next */null,
            /* istanbul ignore next */(0, _counterpart2.default)(value, /* istanbul ignore next */_extends({},
            useOriginalTextAsFallback ? { fallback: value } : {},
            counterPartOptions))));



}

Translation.propTypes = /* istanbul ignore next */_extends({}, _commonProps2.default, {

    /**
                                                                                         * Second argument for Translate Function
                                                                                         */
    counterPartOptions: /* istanbul ignore next */_react2.default.PropTypes.object,
    useOriginalTextAsFallback: /* istanbul ignore next */_react2.default.PropTypes.bool });


Translation.defaultProps = {
    useOriginalTextAsFallback: false,
    counterPartOptions: {} };