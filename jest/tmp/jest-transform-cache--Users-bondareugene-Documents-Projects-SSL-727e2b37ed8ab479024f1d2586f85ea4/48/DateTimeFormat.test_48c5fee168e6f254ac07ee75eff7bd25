/* istanbul ignore next */'use strict';var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);
var /* istanbul ignore next */_moment = require('moment'); /* istanbul ignore next */var _moment2 = _interopRequireDefault(_moment);
var /* istanbul ignore next */_enzyme = require('enzyme');
var /* istanbul ignore next */_DateTimeFormat = require('./DateTimeFormat'); /* istanbul ignore next */var _DateTimeFormat2 = _interopRequireDefault(_DateTimeFormat);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

describe('DateTimeFormat', function () {
    it('will be mounted and contain Date', function () {
        var date = '2016-10-06T05:53:56.767-05:00',className = 'test-class',DateFormat = 'YYYY/MM/DD hh:mm A';
        var component = /* istanbul ignore next */(0, _enzyme.mount)( /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_DateTimeFormat2.default, /* istanbul ignore next */{ date: date, className: className }));
        expect(component).toBeTruthy();
        expect(component.find('.test-class span')).toHaveText( /* istanbul ignore next */(0, _moment2.default)(date).format(DateFormat));
    });
    it('contain empty value', function () {
        var date = null,className = 'test-class',emptyValue = '-';
        var component = /* istanbul ignore next */(0, _enzyme.mount)( /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_DateTimeFormat2.default, /* istanbul ignore next */{ date: date, className: className, emptyValue: emptyValue }));
        expect(component).toBeTruthy();
        expect(component.find('.test-class span')).toHaveText(emptyValue);
    });
});