/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });var /* istanbul ignore next */_reflux = require('reflux'); /* istanbul ignore next */var _reflux2 = _interopRequireDefault(_reflux);

var /* istanbul ignore next */_api = require('../../../Models/ServiceUser/api'); /* istanbul ignore next */var _api2 = _interopRequireDefault(_api);
var /* istanbul ignore next */_api3 = require('../../../Models/Catalogs/api'); /* istanbul ignore next */var _api4 = _interopRequireDefault(_api3);
var /* istanbul ignore next */_FilterWithoutLimit = require('../../../Utils/FilterWithoutLimit'); /* istanbul ignore next */var _FilterWithoutLimit2 = _interopRequireDefault(_FilterWithoutLimit);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

var CustomerAccountDialogActions = {
    initNew: /* istanbul ignore next */_reflux2.default.createAction({ asyncResult: true }),
    initEdit: /* istanbul ignore next */_reflux2.default.createAction({ asyncResult: true }),
    createCustomer: /* istanbul ignore next */_reflux2.default.createAction({ asyncResult: true }),
    updateCustomer: /* istanbul ignore next */_reflux2.default.createAction({ asyncResult: true }),
    destroy: /* istanbul ignore next */_reflux2.default.createAction({ sync: true }) };


CustomerAccountDialogActions.initNew.listen(function () {
    /* istanbul ignore next */_api4.default.service.fetchCatalogs( /* istanbul ignore next */_FilterWithoutLimit2.default.filter).
    then(this.completed, this.failed);
});

CustomerAccountDialogActions.initEdit.listen(function (customerId) {
    Promise.all([/* istanbul ignore next */_api2.default.fetchCustomer(customerId), /* istanbul ignore next */_api4.default.service.fetchCatalogs( /* istanbul ignore next */_FilterWithoutLimit2.default.filter)]).
    then(this.completed, this.failed);
});

CustomerAccountDialogActions.createCustomer.listen(function (data) {/* istanbul ignore next */var _this = this;
    /* istanbul ignore next */_api2.default.addCustomer(data).
    then(function (response) /* istanbul ignore next */{return response.json();}).
    then(function (json) {
        (!json.errors ? /* istanbul ignore next */_this.completed : /* istanbul ignore next */_this.failed)(json);
    });
});

CustomerAccountDialogActions.updateCustomer.listen(function (customerId, data) {/* istanbul ignore next */var _this2 = this;
    /* istanbul ignore next */_api2.default.updateCustomer(data, customerId).
    then(function (response) /* istanbul ignore next */{return response.json();}).
    then(function (json) {
        (!json.errors ? /* istanbul ignore next */_this2.completed : /* istanbul ignore next */_this2.failed)(json);
    });
}); /* istanbul ignore next */exports.default =

CustomerAccountDialogActions;