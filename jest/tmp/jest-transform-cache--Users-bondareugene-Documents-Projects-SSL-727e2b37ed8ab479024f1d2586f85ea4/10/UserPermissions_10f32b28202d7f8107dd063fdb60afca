/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();var /* istanbul ignore next */_User = require('./User'); /* istanbul ignore next */function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}

/**
class
classdesc This is collection of methods to check does user has permission to do some action
var
UserPermissions = function () {





    /**
                                * @param {User} [user]
                                */
    function /* istanbul ignore next */UserPermissions(user) {/* istanbul ignore next */_classCallCheck(this, UserPermissions);this.user = null;
        this.user = user;
    }

    /**
       * @param {Object} [test] - test
       * @return {boolean}
       */ /**
           * @type {User} - currentUser
           */_createClass(UserPermissions, [{ key: 'editTestSubscription', value: function editTestSubscription(test) {if (!test) {
                throw new Error( /* istanbul ignore next */'Test wasn\'t passed');
            }
            return this.user.hasPermission( /* istanbul ignore next */_User.STAFF_PERMISSIONS.VIEW_PRODUCTS) &&
            test.edit_permission;
        }

        /**
           * @return {boolean}
           */ }, { key: 'viewActivityLogsPage', value: function viewActivityLogsPage()
        {
            return !this.user.isEmpty && this.user.hasOneOfPermissions([
            /* istanbul ignore next */_User.STAFF_PERMISSIONS.VIEW_ACTIVITY_LOGS,
            /* istanbul ignore next */_User.CUSTOMER_PERMISSIONS.VIEW_CUSTOMER_LOGS]);

        } }]);return UserPermissions;}(); /* istanbul ignore next */exports.default = UserPermissions;