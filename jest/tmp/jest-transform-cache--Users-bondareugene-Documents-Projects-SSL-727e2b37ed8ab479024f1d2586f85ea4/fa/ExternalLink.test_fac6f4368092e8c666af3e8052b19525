/* istanbul ignore next */'use strict';var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);
var /* istanbul ignore next */_enzyme = require('enzyme');
var /* istanbul ignore next */_ExternalLink = require('./ExternalLink'); /* istanbul ignore next */var _ExternalLink2 = _interopRequireDefault(_ExternalLink);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

describe('ExternalLink', function () {
    var test = {
        provider: 'Hailstorm',
        provider_url: 'https://example.com' };

    var source = 'provider';
    var url_source = 'provider_url';

    it('renders correctly', function () {
        var props = { test: test, source: source, url_source: url_source };
        var tree = /* istanbul ignore next */(0, _enzyme.shallow)( /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_ExternalLink2.default, props));
        expect(tree.node).toMatchSnapshot();
    });

    it('uses name as a value if value is empty', function () {
        var test = {
            provider: 'Hailstorm' };

        var props = { test: test, source: source, url_source: url_source };
        var tree = /* istanbul ignore next */(0, _enzyme.shallow)( /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_ExternalLink2.default, props));
        expect(tree.node).toMatchSnapshot();
    });
});