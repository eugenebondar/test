/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);
var /* istanbul ignore next */_fileUtils = require('../../../../Utils/fileUtils');

/* istanbul ignore next */require('./ReportItem.less'); /* istanbul ignore next */function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call && (typeof call === "object" || typeof call === "function") ? call : self;}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;}var

ReportItem = function (_React$Component) {_inherits(ReportItem, _React$Component);
    function /* istanbul ignore next */ReportItem(props) {/* istanbul ignore next */_classCallCheck(this, ReportItem);return _possibleConstructorReturn(this, (ReportItem.__proto__ || Object.getPrototypeOf(ReportItem)).call(this,
        props));
    }_createClass(ReportItem, [{ key: 'render', value: function render()
        {/* istanbul ignore next */var _props =
            this.props,item = _props.item,deleteReport = _props.deleteReport,hasImagePreview = _props.hasImagePreview,isEditable = _props.isEditable;
            var removeButton = isEditable && deleteReport &&
            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'span', /* istanbul ignore next */{ className: 'sc-icon-xmark sc-error', onClick: /* istanbul ignore next */this.deleteReport.bind(this) });

            var content = hasImagePreview ?
            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'label', /* istanbul ignore next */null,
                /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'img', /* istanbul ignore next */{ src: item.file_url, width: '200' }),
                /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'a', /* istanbul ignore next */{ href: item.file_url, target: /* istanbul ignore next */(0, _fileUtils.shouldFileOpenInNewWindow)(item.file_url) && '_blank' },

                    item.name)) :



            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'a', /* istanbul ignore next */{ href: item.file_url, target: /* istanbul ignore next */(0, _fileUtils.shouldFileOpenInNewWindow)(item.file_url) && '_blank' }, item.name);

            return (
                /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'li', /* istanbul ignore next */{ className: 'import-report-list-item' },
                    content,
                    removeButton));


        } }, { key: 'deleteReport', value: function deleteReport()
        {/* istanbul ignore next */var _props2 =
            this.props,deleteReport = _props2.deleteReport,item = _props2.item;
            var data = {
                attachable_id: item.attachable_id,
                attachable_type: item.attachable_type,
                name: item.name };

            deleteReport(item.id, data);
        } }]);return ReportItem;}( /* istanbul ignore next */_react2.default.Component); /* istanbul ignore next */exports.default = ReportItem;


ReportItem.propTypes = {
    item: /* istanbul ignore next */_react2.default.PropTypes.shape({
        id: /* istanbul ignore next */_react2.default.PropTypes.string,
        name: /* istanbul ignore next */_react2.default.PropTypes.string,
        file_url: /* istanbul ignore next */_react2.default.PropTypes.string,
        attachable_id: /* istanbul ignore next */_react2.default.PropTypes.string,
        attachable_type: /* istanbul ignore next */_react2.default.PropTypes.string }).
    isRequired,
    hasImagePreview: /* istanbul ignore next */_react2.default.PropTypes.bool,
    deleteReport: /* istanbul ignore next */_react2.default.PropTypes.func,
    isEditable: /* istanbul ignore next */_react2.default.PropTypes.bool };


ReportItem.defaultProps = {
    isEditable: false,
    hasImagePreview: false };